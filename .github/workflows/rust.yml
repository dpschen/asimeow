name: CI - Test and publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: asimeow

jobs:
  test:
    name: Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build-macos:
    name: Build macOS Binaries
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare binary for upload
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} release/${{ env.BINARY_NAME }}-${{ matrix.target }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ matrix.target }}
          path: release/${{ env.BINARY_NAME }}-${{ matrix.target }}
          if-no-files-found: error

  publish-create:
    name: Publish to crates.io
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }}

  create-release:
    name: Create GitHub Release
    needs: [build-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Prepare release assets
        run: |
          cd release
          # Create zip files for each binary
          for dir in */; do
            dir=${dir%/}
            chmod +x "$dir/$dir"
            zip -j "$dir.zip" "$dir/$dir"
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            release/*.zip
          body: |
            ## Asimeow v${{ steps.get_version.outputs.VERSION }}

            ### Installation

            #### Homebrew
            
            ```bash
            brew tap mdnmdn/asimeow
            brew install asimeow
            ```

            #### Manual Installation
            Download the appropriate binary for your system:
            - Intel Mac: asimeow-x86_64-apple-darwin.zip
            - Apple Silicon Mac: asimeow-aarch64-apple-darwin.zip

            Extract and place the binary in your PATH.

            #### Cargo
            ```
            cargo install asimeow
            ```

            See [CHANGELOG.md](https://github.com/mdnmdn/asimeow/blob/main/CHANGELOG.md) for details on changes in this release.

  update-homebrew:
    name: Update Homebrew Formula
    needs: create-release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Checkout homebrew tap repository
        uses: actions/checkout@v3
        with:
          repository: mdnmdn/homebrew-asimeow
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap
          fetch-depth: 0

      - name: Download release assets to calculate SHA256
        run: |
          mkdir -p downloads
          curl -L -o downloads/asimeow-x86_64-apple-darwin.zip https://github.com/mdnmdn/asimeow/releases/download/v${{ steps.get_version.outputs.VERSION }}/asimeow-x86_64-apple-darwin.zip
          curl -L -o downloads/asimeow-aarch64-apple-darwin.zip https://github.com/mdnmdn/asimeow/releases/download/v${{ steps.get_version.outputs.VERSION }}/asimeow-aarch64-apple-darwin.zip
          curl -L -o downloads/source.tar.gz https://github.com/mdnmdn/asimeow/archive/refs/tags/v${{ steps.get_version.outputs.VERSION }}.tar.gz

      - name: Calculate SHA256 hashes
        id: sha256
        run: |
          INTEL_SHA256=$(sha256sum downloads/asimeow-x86_64-apple-darwin.zip | awk '{print $1}')
          ARM_SHA256=$(sha256sum downloads/asimeow-aarch64-apple-darwin.zip | awk '{print $1}')
          SOURCE_SHA256=$(sha256sum downloads/source.tar.gz | awk '{print $1}')
          echo "INTEL_SHA256=$INTEL_SHA256" >> $GITHUB_OUTPUT
          echo "ARM_SHA256=$ARM_SHA256" >> $GITHUB_OUTPUT
          echo "SOURCE_SHA256=$SOURCE_SHA256" >> $GITHUB_OUTPUT

      - name: Ensure Formula directory exists
        run: mkdir -p homebrew-tap/Formula

      - name: Update formula
        run: |
          cat > homebrew-tap/Formula/asimeow.rb << EOF
          class Asimeow < Formula
            desc "A tool for managing macOS Time Machine exclusions for developer projects"
            homepage "https://github.com/mdnmdn/asimeow"
            version "${{ steps.get_version.outputs.VERSION }}"
            license "MIT"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/mdnmdn/asimeow/releases/download/v#{version}/asimeow-aarch64-apple-darwin.zip"
                sha256 "${{ steps.sha256.outputs.ARM_SHA256 }}"
              elsif Hardware::CPU.intel?
                url "https://github.com/mdnmdn/asimeow/releases/download/v#{version}/asimeow-x86_64-apple-darwin.zip"
                sha256 "${{ steps.sha256.outputs.INTEL_SHA256 }}"
              end
            end

            # Fallback to source code if no binary is available
            resource "source" do
              url "https://github.com/mdnmdn/asimeow/archive/refs/tags/v#{version}.tar.gz"
              sha256 "${{ steps.sha256.outputs.SOURCE_SHA256 }}"
            end

            depends_on "rust" => :build

            def install
              if Hardware::CPU.arm? || Hardware::CPU.intel?
                # Binary installation
                bin.install "asimeow"
              else
                # Source installation as fallback
                resource("source").stage do
                  system "cargo", "install", "--locked", "--root", prefix, "--path", "."
                end
              end

              # Install the launchd plist file
              (prefix/"homebrew.mxcl.asimeow.plist").write launchd_plist
            end

            def launchd_plist
              <<~EOS
                <?xml version="1.0" encoding="UTF-8"?>
                <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
                <plist version="1.0">
                    <dict>
                        <key>Label</key>
                        <string>homebrew.mxcl.asimeow</string>
                        <key>Program</key>
                        <string>#{opt_bin}/asimeow</string>
                        <key>StartCalendarInterval</key>
                       <dict>
                         <key>Hour</key>
                         <integer>23</integer>
                         <key>Minute</key>
                         <integer>11</integer>
                       </dict>
                    </dict>
                </plist>
              EOS
            end

            def caveats
              <<~EOS
                To have launchd start asimeow now and restart at login:
                  brew services start asimeow

                Or, if you don't want/need a background service you can just run:
                  asimeow
              EOS
            end

            test do
              system "#{bin}/asimeow", "--version"
            end
          end
          EOF

      - name: Commit and push updated formula
        run: |
          cd homebrew-tap
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add Formula/asimeow.rb
            git commit -m "Update asimeow to v${{ steps.get_version.outputs.VERSION }}"
            git push origin HEAD:main
          fi