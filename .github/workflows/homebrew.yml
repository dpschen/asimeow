name: Update Homebrew Formula

on:
#  release:
#    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to use (without v prefix, e.g., 0.1.0)'
        required: true
        default: ''
      force_update:
        description: 'Force update even if version exists'
        type: boolean
        default: false

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "Using manually provided version: ${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
            echo "Using version from tag: $VERSION"
          fi

      - name: Check if assets exist
        id: check_assets
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://github.com/${{ github.repository }}/releases/download/v$VERSION/asimeow-x86_64-apple-darwin.zip)
          
          if [ "$HTTP_CODE" == "200" ] || [ "${{ github.event.inputs.force_update }}" == "true" ]; then
            echo "ASSETS_EXIST=true" >> $GITHUB_OUTPUT
            echo "Assets exist or force update enabled, proceeding with formula update"
          else
            echo "ASSETS_EXIST=false" >> $GITHUB_OUTPUT
            echo "Assets don't exist for version v$VERSION, aborting"
            exit 1
          fi

      - name: Download release assets and compute SHA256
        id: sha256
        if: steps.check_assets.outputs.ASSETS_EXIST == 'true'
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          
          # Download each asset and compute SHA256
          mkdir -p tmp
          
          # macOS ARM64
          curl -L -o tmp/macos-arm64.zip https://github.com/${{ github.repository }}/releases/download/v$VERSION/asimeow-aarch64-apple-darwin.zip
          MACOS_ARM64_SHA256=$(sha256sum tmp/macos-arm64.zip | cut -d ' ' -f 1)
          
          # macOS x86_64
          curl -L -o tmp/macos-x86.zip https://github.com/${{ github.repository }}/releases/download/v$VERSION/asimeow-x86_64-apple-darwin.zip
          MACOS_X86_SHA256=$(sha256sum tmp/macos-x86.zip | cut -d ' ' -f 1)
          
          # Export SHA256 values
          echo "MACOS_ARM64_SHA256=$MACOS_ARM64_SHA256" >> $GITHUB_OUTPUT
          echo "MACOS_X86_SHA256=$MACOS_X86_SHA256" >> $GITHUB_OUTPUT

      - name: Checkout homebrew tap
        if: steps.check_assets.outputs.ASSETS_EXIST == 'true'
        uses: actions/checkout@v3
        with:
          repository: mdnmdn/homebrew-asimeow
          token: ${{ secrets.TAP_REPO_TOKEN }}
          path: homebrew-asimeow

      - name: Update formula
        if: steps.check_assets.outputs.ASSETS_EXIST == 'true'
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          MACOS_ARM64_SHA256=${{ steps.sha256.outputs.MACOS_ARM64_SHA256 }}
          MACOS_X86_SHA256=${{ steps.sha256.outputs.MACOS_X86_SHA256 }}
          
          cd homebrew-asimeow
          
          mkdir -p Formula
          
          # Create or update formula file
          cat > Formula/asimeow.rb << EOF
          class Asimeow < Formula
            desc "A tool for managing macOS Time Machine exclusions for developer projects"
            homepage "https://github.com/${{ github.repository }}"
            version "$VERSION"
            license "MIT"  # Replace with your actual license
          
            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/v$VERSION/asimeow-aarch64-apple-darwin.zip"
                sha256 "$MACOS_ARM64_SHA256"
              else
                url "https://github.com/${{ github.repository }}/releases/download/v$VERSION/asimeow-x86_64-apple-darwin.zip"
                sha256 "$MACOS_X86_SHA256"
              end
            end
          
            def install
              bin.install "asimeow"
              # Add any other files you want to install
            end
          
            test do
              system "#{bin}/asimeow", "--help"
            end
          end
          EOF

      - name: Commit and push changes
        if: steps.check_assets.outputs.ASSETS_EXIST == 'true'
        run: |
          cd homebrew-asimeow
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add Formula/asimeow.rb
          git commit -m "Update formula to v${{ steps.version.outputs.VERSION }}"
          git push

      - name: Set output status
        if: always()
        run: |
          if [ "${{ steps.check_assets.outputs.ASSETS_EXIST }}" == "true" ]; then
            echo "✅ Formula updated successfully to version ${{ steps.version.outputs.VERSION }}"
          else
            echo "❌ Failed to update formula. Assets don't exist for version ${{ steps.version.outputs.VERSION }}"
          fi